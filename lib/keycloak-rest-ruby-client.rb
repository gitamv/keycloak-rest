=begin
#Keycloak Admin REST API

#This is a REST API reference for the Keycloak Admin

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

# Common files
require 'keycloak-rest-ruby-client/api_client'
require 'keycloak-rest-ruby-client/api_error'
require 'keycloak-rest-ruby-client/version'
require 'keycloak-rest-ruby-client/configuration'

# Models
require 'keycloak-rest-ruby-client/models/access_token'
require 'keycloak-rest-ruby-client/models/access_token_access'
require 'keycloak-rest-ruby-client/models/access_token_authorization'
require 'keycloak-rest-ruby-client/models/access_token_cert_conf'
require 'keycloak-rest-ruby-client/models/address_claim_set'
require 'keycloak-rest-ruby-client/models/admin_event_representation'
require 'keycloak-rest-ruby-client/models/auth_details_representation'
require 'keycloak-rest-ruby-client/models/authentication_execution_export_representation'
require 'keycloak-rest-ruby-client/models/authentication_execution_info_representation'
require 'keycloak-rest-ruby-client/models/authentication_execution_representation'
require 'keycloak-rest-ruby-client/models/authentication_flow_representation'
require 'keycloak-rest-ruby-client/models/authenticator_config_info_representation'
require 'keycloak-rest-ruby-client/models/authenticator_config_representation'
require 'keycloak-rest-ruby-client/models/certificate_representation'
require 'keycloak-rest-ruby-client/models/client_initial_access_create_presentation'
require 'keycloak-rest-ruby-client/models/client_initial_access_presentation'
require 'keycloak-rest-ruby-client/models/client_mappings_representation'
require 'keycloak-rest-ruby-client/models/client_representation'
require 'keycloak-rest-ruby-client/models/client_scope_evaluate_resource_protocol_mapper_evaluation_representation'
require 'keycloak-rest-ruby-client/models/client_scope_representation'
require 'keycloak-rest-ruby-client/models/component_export_representation'
require 'keycloak-rest-ruby-client/models/component_representation'
require 'keycloak-rest-ruby-client/models/component_type_representation'
require 'keycloak-rest-ruby-client/models/config_property_representation'
require 'keycloak-rest-ruby-client/models/credential_representation'
require 'keycloak-rest-ruby-client/models/event_representation'
require 'keycloak-rest-ruby-client/models/federated_identity_representation'
require 'keycloak-rest-ruby-client/models/global_request_result'
require 'keycloak-rest-ruby-client/models/group_representation'
require 'keycloak-rest-ruby-client/models/identity_provider_mapper_representation'
require 'keycloak-rest-ruby-client/models/identity_provider_representation'
require 'keycloak-rest-ruby-client/models/key_store_config'
require 'keycloak-rest-ruby-client/models/keys_metadata_representation'
require 'keycloak-rest-ruby-client/models/keys_metadata_representation_key_metadata_representation'
require 'keycloak-rest-ruby-client/models/management_permission_reference'
require 'keycloak-rest-ruby-client/models/mappings_representation'
require 'keycloak-rest-ruby-client/models/memory_info_representation'
require 'keycloak-rest-ruby-client/models/multivalued_hash_map'
require 'keycloak-rest-ruby-client/models/partial_import_representation'
require 'keycloak-rest-ruby-client/models/password_policy_type_representation'
require 'keycloak-rest-ruby-client/models/permission'
require 'keycloak-rest-ruby-client/models/policy_representation'
require 'keycloak-rest-ruby-client/models/profile_info_representation'
require 'keycloak-rest-ruby-client/models/protocol_mapper_representation'
require 'keycloak-rest-ruby-client/models/provider_representation'
require 'keycloak-rest-ruby-client/models/realm_events_config_representation'
require 'keycloak-rest-ruby-client/models/realm_representation'
require 'keycloak-rest-ruby-client/models/required_action_provider_representation'
require 'keycloak-rest-ruby-client/models/resource_representation'
require 'keycloak-rest-ruby-client/models/resource_server_representation'
require 'keycloak-rest-ruby-client/models/role_representation'
require 'keycloak-rest-ruby-client/models/role_representation_composites'
require 'keycloak-rest-ruby-client/models/roles_representation'
require 'keycloak-rest-ruby-client/models/scope_mapping_representation'
require 'keycloak-rest-ruby-client/models/scope_representation'
require 'keycloak-rest-ruby-client/models/server_info_representation'
require 'keycloak-rest-ruby-client/models/spi_info_representation'
require 'keycloak-rest-ruby-client/models/synchronization_result'
require 'keycloak-rest-ruby-client/models/system_info_representation'
require 'keycloak-rest-ruby-client/models/test_ldap_connection_representation'
require 'keycloak-rest-ruby-client/models/user_consent_representation'
require 'keycloak-rest-ruby-client/models/user_federation_mapper_representation'
require 'keycloak-rest-ruby-client/models/user_federation_provider_representation'
require 'keycloak-rest-ruby-client/models/user_representation'
require 'keycloak-rest-ruby-client/models/user_session_representation'

# APIs
require 'keycloak-rest-ruby-client/api/attack_detection_api'
require 'keycloak-rest-ruby-client/api/authentication_management_api'
require 'keycloak-rest-ruby-client/api/client_attribute_certificate_api'
require 'keycloak-rest-ruby-client/api/client_initial_access_api'
require 'keycloak-rest-ruby-client/api/client_registration_policy_api'
require 'keycloak-rest-ruby-client/api/client_role_mappings_api'
require 'keycloak-rest-ruby-client/api/client_scopes_api'
require 'keycloak-rest-ruby-client/api/clients_api'
require 'keycloak-rest-ruby-client/api/component_api'
require 'keycloak-rest-ruby-client/api/groups_api'
require 'keycloak-rest-ruby-client/api/identity_providers_api'
require 'keycloak-rest-ruby-client/api/key_api'
require 'keycloak-rest-ruby-client/api/protocol_mappers_api'
require 'keycloak-rest-ruby-client/api/realms_admin_api'
require 'keycloak-rest-ruby-client/api/role_mapper_api'
require 'keycloak-rest-ruby-client/api/roles_api'
require 'keycloak-rest-ruby-client/api/roles_by_id_api'
require 'keycloak-rest-ruby-client/api/root_api'
require 'keycloak-rest-ruby-client/api/scope_mappings_api'
require 'keycloak-rest-ruby-client/api/user_storage_provider_api'
require 'keycloak-rest-ruby-client/api/users_api'

module KeycloakRest
  class << self
    # Customize default settings for the SDK using block.
    #   KeycloakRest.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
