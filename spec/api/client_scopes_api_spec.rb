=begin
#Keycloak Admin REST API

#This is a REST API reference for the Keycloak Admin

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for KeycloakRest::ClientScopesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ClientScopesApi' do
  before do
    # run before each test
    @api_instance = KeycloakRest::ClientScopesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ClientScopesApi' do
    it 'should create an instance of ClientScopesApi' do
      expect(@api_instance).to be_instance_of(KeycloakRest::ClientScopesApi)
    end
  end

  # unit tests for realm_client_scopes_get
  # Get client scopes belonging to the realm   Returns a list of client scopes belonging to the realm
  # @param realm realm name (not id!)
  # @param [Hash] opts the optional parameters
  # @return [Array<ClientScopeRepresentation>]
  describe 'realm_client_scopes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_client_scopes_id_delete
  # Delete the client scope
  # @param realm realm name (not id!)
  # @param id id of client scope (not name)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'realm_client_scopes_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_client_scopes_id_get
  # Get representation of the client scope
  # @param realm realm name (not id!)
  # @param id id of client scope (not name)
  # @param [Hash] opts the optional parameters
  # @return [ClientScopeRepresentation]
  describe 'realm_client_scopes_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_client_scopes_id_put
  # Update the client scope
  # @param realm realm name (not id!)
  # @param id id of client scope (not name)
  # @param client_scope_representation 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'realm_client_scopes_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_client_scopes_post
  # Create a new client scope   Client Scopeâ€™s name must be unique!
  # @param realm realm name (not id!)
  # @param client_scope_representation 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'realm_client_scopes_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
