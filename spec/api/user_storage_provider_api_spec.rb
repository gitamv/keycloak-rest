=begin
#Keycloak Admin REST API

#This is a REST API reference for the Keycloak Admin

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for KeycloakRest::UserStorageProviderApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserStorageProviderApi' do
  before do
    # run before each test
    @api_instance = KeycloakRest::UserStorageProviderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserStorageProviderApi' do
    it 'should create an instance of UserStorageProviderApi' do
      expect(@api_instance).to be_instance_of(KeycloakRest::UserStorageProviderApi)
    end
  end

  # unit tests for id_name_get
  # Need this for admin console to display simple name of provider when displaying client detail   KEYCLOAK-4328
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'id_name_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_user_storage_id_name_get
  # Need this for admin console to display simple name of provider when displaying user detail   KEYCLOAK-4328
  # @param realm realm name (not id!)
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'realm_user_storage_id_name_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_user_storage_id_remove_imported_users_post
  # Remove imported users
  # @param realm realm name (not id!)
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'realm_user_storage_id_remove_imported_users_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_user_storage_id_sync_post
  # Trigger sync of users   Action can be \&quot;triggerFullSync\&quot; or \&quot;triggerChangedUsersSync\&quot;
  # @param realm realm name (not id!)
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :action 
  # @return [SynchronizationResult]
  describe 'realm_user_storage_id_sync_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_user_storage_id_unlink_users_post
  # Unlink imported users from a storage provider
  # @param realm realm name (not id!)
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'realm_user_storage_id_unlink_users_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for realm_user_storage_parent_id_mappers_id_sync_post
  # Trigger sync of mapper data related to ldap mapper (roles, groups, …​)   direction is \&quot;fedToKeycloak\&quot; or \&quot;keycloakToFed\&quot;
  # @param realm realm name (not id!)
  # @param parent_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :direction 
  # @return [SynchronizationResult]
  describe 'realm_user_storage_parent_id_mappers_id_sync_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
